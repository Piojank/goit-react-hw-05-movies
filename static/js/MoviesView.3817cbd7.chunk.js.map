{"version":3,"file":"static/js/MoviesView.3817cbd7.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/Components/MoviesList/MoviesList.module.css?9dd2","Components/MoviesList/MoviesList.jsx","api/api.js","webpack://goit-react-hw-05-movies/./src/Components/SearchForm/SearchForm.module.css?9d90","Components/SearchForm/SearchForm.jsx","views/MoviesView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MoviesList_section__CnPnb\",\"list\":\"MoviesList_list__mkDGi\",\"item\":\"MoviesList_item__RLfc0\",\"link\":\"MoviesList_link__oyI4l\"};","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport s from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <section className={s.section}>\n      <ul className={s.list}>\n        {movies.map(({ title, id }) => (\n          <li key={id} className={s.item}>\n            <Link className={s.link} to={`/movies/${id}`}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2fbc7db510c512abbad3f7536a5c4f5b';\n\nconst getListData = res => res.data.results.map(({ title, id }) => ({ title, id }));\n\nconst _axios = axios.create({ baseURL: BASE_URL });\n\nexport const getTrending = () =>\n  _axios.get(`/trending/movie/week?api_key=${API_KEY}&limit=20`).then(getListData);\n\nexport const getMoviesByQuery = query =>\n  _axios.get(`/search/movie?api_key=${API_KEY}&limit=20&query=${query}`).then(getListData);\n\nexport const getMovieDetails = id =>\n  _axios\n    .get(`/movie/${id}?api_key=${API_KEY}`)\n    .then(res => res.data)\n    .then(({ title, poster_path, vote_average, overview, genres }) => ({\n      title,\n      poster_path,\n      vote_average,\n      overview,\n      genres,\n    }));\n\nexport const getCastInfo = id =>\n  _axios.get(`/movie/${id}/credits?api_key=${API_KEY}`).then(res =>\n    res.data.cast.map(({ id, profile_path, original_name, character }) => ({\n      id,\n      profile_path,\n      original_name,\n      character,\n    })),\n  );\n\nexport const getReviewsInfo = id =>\n  _axios\n    .get(`movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(res => res.data.results.map(({ id, author, content }) => ({ id, author, content })));\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__9O0aO\",\"input\":\"SearchForm_input__UZdob\",\"button\":\"SearchForm_button__ivRM5\"};","import React, { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport s from './SearchForm.module.css';\nimport { Notify } from 'notiflix';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onChange = ({ target }) => setQuery(target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      Notify.failure('Empty query');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <input className={s.input} type=\"text\" value={query} onChange={onChange} />\n      <button className={s.button} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import { Notify } from 'notiflix';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { getMoviesByQuery } from '../api/api';\nimport { SearchForm } from '../Components/SearchForm/SearchForm';\nimport { MoviesList } from 'Components/MoviesList/MoviesList';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport qs from 'qs';\nimport { QueryContext } from '../Components/App';\n\nconst MoviesView = () => {\n  const [movies, setMovies] = useState([]);\n\n  const { query, setQuery } = useContext(QueryContext);\n  const { search, pathname } = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (search.includes('query')) {\n      setQuery(qs.parse(search.replace('?', '')).query);\n      return;\n    }\n    setQuery('');\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  useEffect(() => {\n    let cancelled = false;\n\n    !query && setMovies([]);\n\n    if (query) {\n      navigate(`${pathname}?query=${query}`);\n      getMoviesByQuery(query)\n        .then(data => !cancelled && setMovies(data))\n        .catch(() => Notify.failure('Something went wrong!'));\n    }\n    return () => {\n      cancelled = true;\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  const onSubmit = query => setQuery(query);\n\n  return (\n    <>\n      <SearchForm onSubmit={onSubmit} />\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default MoviesView;"],"names":["MoviesList","movies","className","s","map","title","id","to","API_KEY","getListData","res","data","results","_axios","axios","baseURL","getTrending","get","then","getMoviesByQuery","query","getMovieDetails","poster_path","vote_average","overview","genres","getCastInfo","cast","profile_path","original_name","character","getReviewsInfo","author","content","SearchForm","onSubmit","useState","setQuery","e","preventDefault","Notify","type","value","onChange","target","setMovies","useContext","QueryContext","useLocation","search","pathname","navigate","useNavigate","useEffect","includes","qs","replace","cancelled","catch"],"sourceRoot":""}