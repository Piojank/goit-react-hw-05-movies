{"version":3,"file":"static/js/HomeView.c11f949e.chunk.js","mappings":"2LACA,EAA0B,4BAA1B,EAA6D,yBAA7D,EAA6F,yBAA7F,EAA6H,yB,SCIhHA,EAAa,SAAH,GAAoB,IAAdC,EAAM,EAANA,OAC3B,OACE,oBAASC,UAAWC,EAAU,UAC5B,eAAID,UAAWC,EAAO,SACnBF,EAAOG,KAAI,gBAAGC,EAAK,EAALA,MAAOC,EAAE,EAAFA,GAAE,OACtB,eAAaJ,UAAWC,EAAO,UAC7B,SAAC,KAAI,CAACD,UAAWC,EAAQI,GAAE,kBAAaD,GAAK,SAC1CD,KAFIC,EAIJ,OAKf,C,mEClBA,EAAwB,qB,SCGXE,EAAQ,SAAH,GAAmB,IAAbH,EAAK,EAALA,MACtB,OAAO,eAAIH,UAAWC,EAAQ,SAAEE,GAClC,C,sKCHMI,EAAU,mCAEVC,EAAc,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,QAAQT,KAAI,YAAY,MAAQ,CAAEC,MAAd,EAALA,MAA0BC,GAAjB,EAAFA,GAAuB,GAAG,EAE9EQ,EAASC,EAAAA,EAAAA,OAAa,CAAEC,QALb,iCAOJC,EAAc,WAAH,OACtBH,EAAOI,IAAI,gCAAD,OAAiCT,EAAO,cAAaU,KAAKT,EAAa,EAEtEU,EAAmB,SAAAC,GAAK,OACnCP,EAAOI,IAAI,yBAAD,OAA0BT,EAAO,2BAAmBY,IAASF,KAAKT,EAAa,EAE9EY,EAAkB,SAAAhB,GAAE,OAC/BQ,EACGI,IAAI,UAAD,OAAWZ,EAAE,oBAAYG,IAC5BU,MAAK,SAAAR,GAAG,OAAIA,EAAIC,IAAI,IACpBO,MAAK,YAAqD,MAAQ,CACjEd,MADY,EAALA,MAEPkB,YAFyB,EAAXA,YAGdC,aAHuC,EAAZA,aAI3BC,SAJiD,EAARA,SAKzCC,OALyD,EAANA,OAMpD,GAAG,EAEKC,EAAc,SAAArB,GAAE,OAC3BQ,EAAOI,IAAI,UAAD,OAAWZ,EAAE,4BAAoBG,IAAWU,MAAK,SAAAR,GAAG,OAC5DA,EAAIC,KAAKgB,KAAKxB,KAAI,YAA6C,MAAQ,CACrEE,GADqB,EAAFA,GAEnBuB,aAFmC,EAAZA,aAGvBC,cAHkD,EAAbA,cAIrCC,UAJ6D,EAATA,UAKrD,GAAE,GACH,EAESC,EAAiB,SAAA1B,GAAE,OAC9BQ,EACGI,IAAI,SAAD,OAAUZ,EAAE,4BAAoBG,IACnCU,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAKC,QAAQT,KAAI,YAAsB,MAAQ,CAAEE,GAA3B,EAAFA,GAAiC2B,OAAvB,EAANA,OAAqCC,QAAtB,EAAPA,QAAsC,GAAE,GAAE,C,oJCnClFC,EAAW,WACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAa5B,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,GAAY,EAKhB,OAJAvB,EAAAA,EAAAA,MACGE,MAAK,SAAAP,GAAI,OAAK4B,GAAaF,EAAY1B,EAAK,IAC5C6B,OAAM,kBAAMC,EAAAA,OAAAA,QAAe,wBAAwB,IAE/C,WACLF,GAAY,CACd,CACF,GAAG,KAEI,SAACxC,EAAA,EAAU,CAACC,OAAQoC,GAC7B,ECCA,EAhBiB,WACf,IAAQM,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SAOR,OALAJ,EAAAA,EAAAA,YAAU,WACRI,EAAS,GAEX,GAAG,KAGD,iCACE,SAACnC,EAAA,EAAK,CAACH,MAAM,oBACb,SAAC8B,EAAQ,MAGf,C","sources":["webpack://goit-react-hw-05-movies/./src/Components/MoviesList/MoviesList.module.css?9dd2","Components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/Components/Title/Title.module.css?5993","Components/Title/Title.jsx","api/api.js","Components/Trending/Trending.jsx","views/HomeView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MoviesList_section__CnPnb\",\"list\":\"MoviesList_list__mkDGi\",\"item\":\"MoviesList_item__RLfc0\",\"link\":\"MoviesList_link__oyI4l\"};","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport s from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <section className={s.section}>\n      <ul className={s.list}>\n        {movies.map(({ title, id }) => (\n          <li key={id} className={s.item}>\n            <Link className={s.link} to={`/movies/${id}`}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__pjiK+\"};","import { PropTypes } from 'prop-types';\nimport React from 'react';\nimport s from './Title.module.css';\n\nexport const Title = ({ title }) => {\n  return <h2 className={s.title}>{title}</h2>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2fbc7db510c512abbad3f7536a5c4f5b';\n\nconst getListData = res => res.data.results.map(({ title, id }) => ({ title, id }));\n\nconst _axios = axios.create({ baseURL: BASE_URL });\n\nexport const getTrending = () =>\n  _axios.get(`/trending/movie/week?api_key=${API_KEY}&limit=20`).then(getListData);\n\nexport const getMoviesByQuery = query =>\n  _axios.get(`/search/movie?api_key=${API_KEY}&limit=20&query=${query}`).then(getListData);\n\nexport const getMovieDetails = id =>\n  _axios\n    .get(`/movie/${id}?api_key=${API_KEY}`)\n    .then(res => res.data)\n    .then(({ title, poster_path, vote_average, overview, genres }) => ({\n      title,\n      poster_path,\n      vote_average,\n      overview,\n      genres,\n    }));\n\nexport const getCastInfo = id =>\n  _axios.get(`/movie/${id}/credits?api_key=${API_KEY}`).then(res =>\n    res.data.cast.map(({ id, profile_path, original_name, character }) => ({\n      id,\n      profile_path,\n      original_name,\n      character,\n    })),\n  );\n\nexport const getReviewsInfo = id =>\n  _axios\n    .get(`movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(res => res.data.results.map(({ id, author, content }) => ({ id, author, content })));\n","import { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { getTrending } from '../../api/api';\nimport { MoviesList } from 'Components/MoviesList/MoviesList';\n\nexport const Trending = () => {\n  const [trending, setTrending] = useState([]);\n\n  useEffect(() => {\n    let cancelled = false;\n    getTrending()\n      .then(data => !cancelled && setTrending(data))\n      .catch(() => Notify.failure('Something went wrong!'));\n\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n\n  return <MoviesList movies={trending} />;\n};","import React, { useContext, useEffect } from 'react';\nimport { QueryContext } from '../Components/App';\nimport { Title } from 'Components/Title/Title';\nimport { Trending } from 'Components/Trending/Trending';\n\nconst HomeView = () => {\n  const { setQuery } = useContext(QueryContext);\n\n  useEffect(() => {\n    setQuery('');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <Title title=\"Trending today\" />\n      <Trending />\n    </>\n  );\n};\n\nexport default HomeView;\n"],"names":["MoviesList","movies","className","s","map","title","id","to","Title","API_KEY","getListData","res","data","results","_axios","axios","baseURL","getTrending","get","then","getMoviesByQuery","query","getMovieDetails","poster_path","vote_average","overview","genres","getCastInfo","cast","profile_path","original_name","character","getReviewsInfo","author","content","Trending","useState","trending","setTrending","useEffect","cancelled","catch","Notify","setQuery","useContext","QueryContext"],"sourceRoot":""}